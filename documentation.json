{
    "pipes": [],
    "interfaces": [],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [
        {
            "name": "AppPage",
            "id": "class-AppPage-a0db91bfa3b9914e9048612074084ee6",
            "file": "e2e/src/app.po.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo(): Promise<unknown> {\n    return browser.get(browser.baseUrl) as Promise<unknown>;\n  }\n\n  getTitleText(): Promise<string> {\n    return element(by.css('app-root .content span')).getText() as Promise<string>;\n  }\n}\n",
            "properties": [],
            "methods": [
                {
                    "name": "getTitleText",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<string>",
                    "typeParameters": [],
                    "line": 8,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "navigateTo",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<>",
                    "typeParameters": [],
                    "line": 4,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-b89a99226c2142ca146b6b2a8eab558c",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "template": "<sh-page [theme]=\"themeValue\">                <sh-dropdown [label]=\"label\"\n                             [condensed]=\"condensed\"\n                             [value]=\"value\"\n                             [items]=\"items\"\n                             [attr.multi-select]=\"multiselect === true ? true : undefined\"\n                             [attr.no-border]=\"noborder === true ? true : undefined\"\n                             [error]=\"error\"\n                             [success]=\"success\"\n                             [attr.error-message]=\"errorMessage\">\n                    <sh-menu-item label='Item 1'></sh-menu-item>\n                    <sh-menu-item label='Item 2'></sh-menu-item>\n                    <sh-menu-item label='Item 3'></sh-menu-item>\n                    <sh-menu-item label='Item 4'></sh-menu-item>\n                    <sh-menu-item label='Item 5'></sh-menu-item>\n                    <sh-menu-item label='Item 6'></sh-menu-item>\n                    <sh-menu-item label='Item 7'></sh-menu-item>\n                    <sh-menu-item label='Item 8'></sh-menu-item>\n                    <sh-menu-item label='Item 9'></sh-menu-item>\n                    <sh-menu-item label='Item 10'></sh-menu-item>\n                  </sh-dropdown>\n              </sh-page>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "condensed",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "boolean"
                },
                {
                    "name": "error",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 48,
                    "type": "boolean"
                },
                {
                    "name": "errorMessage",
                    "defaultValue": "'Error Message ( Optional )'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 51,
                    "type": "string"
                },
                {
                    "name": "items",
                    "defaultValue": "3",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 54,
                    "type": "number"
                },
                {
                    "name": "label",
                    "defaultValue": "'label'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "string"
                },
                {
                    "name": "multiselect",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 57,
                    "type": "boolean"
                },
                {
                    "name": "noborder",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "boolean"
                },
                {
                    "name": "success",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 60,
                    "type": "boolean"
                },
                {
                    "name": "themeValue",
                    "defaultValue": "'dark'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "string"
                },
                {
                    "name": "value",
                    "defaultValue": "'Item 3'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'my-shui-app'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 30
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: `<sh-page [theme]=\"themeValue\">\n                <sh-dropdown [label]=\"label\"                             \n                             [condensed]=\"condensed\"\n                             [value]=\"value\"                             \n                             [items]=\"items\"\n                             [attr.multi-select]=\"multiselect === true ? true : undefined\"\n                             [attr.no-border]=\"noborder === true ? true : undefined\"\n                             [error]=\"error\"\n                             [success]=\"success\"\n                             [attr.error-message]=\"errorMessage\">\n                    <sh-menu-item label='Item 1'></sh-menu-item>\n                    <sh-menu-item label='Item 2'></sh-menu-item>\n                    <sh-menu-item label='Item 3'></sh-menu-item>\n                    <sh-menu-item label='Item 4'></sh-menu-item>\n                    <sh-menu-item label='Item 5'></sh-menu-item>\n                    <sh-menu-item label='Item 6'></sh-menu-item>\n                    <sh-menu-item label='Item 7'></sh-menu-item>\n                    <sh-menu-item label='Item 8'></sh-menu-item>\n                    <sh-menu-item label='Item 9'></sh-menu-item>\n                    <sh-menu-item label='Item 10'></sh-menu-item>\n                  </sh-dropdown>\n              </sh-page>`,\n  styles: []\n})\nexport class AppComponent {\n  title = 'my-shui-app';\n\n  @Input()\n  themeValue = 'dark';\n\n  @Input()\n  condensed = false;\n\n  @Input()\n  label = 'label';\n\n  @Input()\n  value = 'Item 3';\n\n  @Input()\n  noborder = false;\n  \n  @Input()\n  error = false;\n\n  @Input()\n  errorMessage = 'Error Message ( Optional )';\n\n  @Input()\n  items = 3;\n\n  @Input()\n  multiselect = false;\n\n  @Input()\n  success = false;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-6707f8bd6528da1fe36b4ba85c067088",
            "file": "src/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [],
            "styles": [],
            "template": "<sh-button [color]=color                         [label]=label\n                        [size]=size\n                        (click)=\"click()\"></sh-button>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "color",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "\"primary\" | \"secondary\" | \"tertiary\""
                },
                {
                    "name": "label",
                    "defaultValue": "'Primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "\"Primary\" | \"Secondary\" | \"Tertiary\""
                },
                {
                    "name": "size",
                    "defaultValue": "'auto'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "\"s\" | \"m\" | \"l\" | \"auto\""
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "click",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'storybook-button',\r\n  template: `<sh-button [color]=color \r\n                        [label]=label\r\n                        [size]=size\r\n                        (click)=\"click()\"></sh-button>`\r\n})\r\n\r\nexport default class ButtonComponent {\r\n  \r\n  @Input()\r\n  color: 'primary' | 'secondary' | 'tertiary' = 'primary';\r\n\r\n  @Input()\r\n  label: 'Primary' | 'Secondary' | 'Tertiary' = 'Primary';\r\n\r\n  @Input()\r\n  size: 's' | 'm' | 'l' | 'auto' = 'auto';\r\n\r\n  @Output()\r\n  onClick  = new EventEmitter<Event>();\r\n\r\n  click() : void {\r\n    this.onClick.emit();\r\n  }\r\n}\r\n  \r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "DropDownComponent",
            "id": "component-DropDownComponent-178bbc2a96f54985f51e3427912c93a2",
            "file": "src/stories/dropdown.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-dropdown",
            "styleUrls": [],
            "styles": [],
            "template": "<sh-page [theme]=\"theme\" scrollable>                <sh-dropdown [label]=\"label\"\n                             [value]=\"value\"\n                             [items]=\"items\"\n                             [editable]=\"editable\"\n                             [mandatory]=\"mandatory\"\n                             [disabled]=\"disabled\"\n                             [success]=\"success\"\n                             [safety]=\"safety\"\n                             [error]=\"error\"\n                             [attr.error-message]=\"errorMessage\"\n                             [condensed]=\"condensed\"\n                             [attr.no-border]=\"noborder === true ? true : undefined\"\n                             [attr.multi-select]=\"multiselect === true ? true : undefined\">\n                    <sh-menu-item label='Item 1'></sh-menu-item>\n                    <sh-menu-item label='Item 2'></sh-menu-item>\n                    <sh-menu-item label='Item 3'></sh-menu-item>\n                    <sh-menu-item label='Item 4'></sh-menu-item>\n                    <sh-menu-item label='Item 5'></sh-menu-item>\n                    <sh-menu-item label='Item 6'></sh-menu-item>\n                    <sh-menu-item label='Item 7'></sh-menu-item>\n                    <sh-menu-item label='Item 8'></sh-menu-item>\n                    <sh-menu-item label='Item 9'></sh-menu-item>\n                    <sh-menu-item label='Item 10'></sh-menu-item>\n                </sh-dropdown>\n            </sh-page>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "condensed",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "boolean"
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "boolean"
                },
                {
                    "name": "editable",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 64,
                    "type": "boolean"
                },
                {
                    "name": "error",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 58,
                    "type": "boolean"
                },
                {
                    "name": "errorMessage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 61,
                    "type": "string"
                },
                {
                    "name": "items",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 67,
                    "type": "any"
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 49,
                    "type": "string"
                },
                {
                    "name": "mandatory",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "boolean"
                },
                {
                    "name": "multiselect",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 76,
                    "type": "boolean"
                },
                {
                    "name": "noborder",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 55,
                    "type": "boolean"
                },
                {
                    "name": "safety",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 70,
                    "type": "boolean"
                },
                {
                    "name": "success",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 73,
                    "type": "boolean"
                },
                {
                    "name": "theme",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "string"
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 52,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'storybook-dropdown',\r\n  template: `<sh-page [theme]=\"theme\" scrollable>\r\n                <sh-dropdown [label]=\"label\"\r\n                             [value]=\"value\"                             \r\n                             [items]=\"items\"\r\n                             [editable]=\"editable\"\r\n                             [mandatory]=\"mandatory\"\r\n                             [disabled]=\"disabled\"\r\n                             [success]=\"success\"\r\n                             [safety]=\"safety\"\r\n                             [error]=\"error\"\r\n                             [attr.error-message]=\"errorMessage\"\r\n                             [condensed]=\"condensed\"                                                          \r\n                             [attr.no-border]=\"noborder === true ? true : undefined\"\r\n                             [attr.multi-select]=\"multiselect === true ? true : undefined\">\r\n                    <sh-menu-item label='Item 1'></sh-menu-item>\r\n                    <sh-menu-item label='Item 2'></sh-menu-item>\r\n                    <sh-menu-item label='Item 3'></sh-menu-item>\r\n                    <sh-menu-item label='Item 4'></sh-menu-item>\r\n                    <sh-menu-item label='Item 5'></sh-menu-item>\r\n                    <sh-menu-item label='Item 6'></sh-menu-item>\r\n                    <sh-menu-item label='Item 7'></sh-menu-item>\r\n                    <sh-menu-item label='Item 8'></sh-menu-item>\r\n                    <sh-menu-item label='Item 9'></sh-menu-item>\r\n                    <sh-menu-item label='Item 10'></sh-menu-item>\r\n                </sh-dropdown>\r\n            </sh-page>`\r\n})\r\n\r\nexport default class DropDownComponent {\r\n\r\n    @Input()\r\n    theme?: string;\r\n\r\n    @Input()\r\n    condensed = false;\r\n\r\n    @Input()\r\n    disabled = false;\r\n\r\n    @Input()\r\n    mandatory = false;\r\n\r\n    @Input()\r\n    label?: string;\r\n\r\n    @Input()\r\n    value?: string;\r\n\r\n    @Input()\r\n    noborder = false;\r\n    \r\n    @Input()\r\n    error = false;\r\n\r\n    @Input()\r\n    errorMessage?: string;\r\n\r\n    @Input()\r\n    editable = false;\r\n\r\n    @Input()\r\n    items;\r\n\r\n    @Input()\r\n    safety = false;\r\n\r\n    @Input()\r\n    success = false;\r\n\r\n    @Input()\r\n    multiselect = false;\r\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "ProgressComponent",
            "id": "component-ProgressComponent-44b403607c1e87ec17de3190efae1e77",
            "file": "src/stories/progressbar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-progressbar",
            "styleUrls": [],
            "styles": [],
            "template": "<sh-progress [value]=value                           [label]=label\n                          [info]=info\n                          [header]=header></sh-progress>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "header",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "string"
                },
                {
                    "name": "info",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string"
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string"
                },
                {
                    "name": "value",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'storybook-progressbar',\r\n  template: `<sh-progress [value]=value \r\n                          [label]=label\r\n                          [info]=info\r\n                          [header]=header></sh-progress>`\r\n})\r\n\r\nexport default class ProgressComponent {\r\n  \r\n  @Input()\r\n  value = '';\r\n\r\n  @Input()\r\n  label = '';\r\n\r\n  @Input()\r\n  info = '';\r\n\r\n  @Input()\r\n  header = '';\r\n}\r\n  \r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "RadialProgressComponent",
            "id": "component-RadialProgressComponent-b967a896168585d08bda0cefa45be12d",
            "file": "src/stories/radialprogressbar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-radialprogressbar",
            "styleUrls": [],
            "styles": [],
            "template": "<sh-progress radial                          [value]=value\n                          [label]=label\n                          [info]=info\n                          [header]=header\n                          [size]=size></sh-progress>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "header",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "string"
                },
                {
                    "name": "info",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string"
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string"
                },
                {
                    "name": "size",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string"
                },
                {
                    "name": "value",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'storybook-radialprogressbar',\r\n  template: `<sh-progress radial\r\n                          [value]=value \r\n                          [label]=label\r\n                          [info]=info\r\n                          [header]=header\r\n                          [size]=size></sh-progress>`\r\n})\r\n\r\nexport default class RadialProgressComponent {\r\n  \r\n  @Input()\r\n  value = '';\r\n\r\n  @Input()\r\n  label = '';\r\n\r\n  @Input()\r\n  info = '';\r\n\r\n  @Input()\r\n  header = '';\r\n\r\n  @Input()\r\n  size = '';\r\n}\r\n  \r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "SpinnerComponent",
            "id": "component-SpinnerComponent-3219c8e8ab1041357ea822a8317d3e20",
            "file": "src/stories/spinner.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-spinner",
            "styleUrls": [],
            "styles": [],
            "template": "<sh-spinner  [label]=label                          [size]=size></sh-spinner>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "size",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'storybook-spinner',\r\n  template: `<sh-spinner  [label]=label\r\n                          [size]=size></sh-spinner>`\r\n})\r\n\r\nexport default class SpinnerComponent {\r\n  \r\n  @Input()\r\n  label = '';\r\n\r\n  @Input()\r\n  size = '';\r\n}\r\n  \r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-d179344ff0474b6276f3d07a5c475ab0",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "Auto",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "DropdownCondensed",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/dropdown.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "DropdownDarkTheme",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/dropdown.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "DropdownDisabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/dropdown.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "DropdownEditable",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/dropdown.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "DropdownError",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/dropdown.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "DropdownErrorMessage",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/dropdown.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "DropdownItems",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/dropdown.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "DropdownLabel",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/dropdown.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "DropdownLightTheme",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/dropdown.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "DropdownMandatory",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/dropdown.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "DropdownMultiSelect",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/dropdown.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "DropdownNoBorder",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/dropdown.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "DropdownSafety",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/dropdown.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "DropdownSuccess",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/dropdown.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "DropdownValue",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/dropdown.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false\n}"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Medium",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "ProgressbarHeader",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Progressbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "ProgressbarHeader",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/RadialProgressbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "ProgressbarInfo",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Progressbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "ProgressbarInfo",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/RadialProgressbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "ProgressbarLabel",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Progressbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "ProgressbarLabel",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/RadialProgressbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "ProgressbarValue",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Progressbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "ProgressbarValue",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/RadialProgressbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SpinnerLabel",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Spinner.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SpinnerSize",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Spinner.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Button>",
                "defaultValue": "(args: Button) => ({\r\n    props: args,\r\n    onClick: action('onClick'),\r\n  })"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/dropdown.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Dropdown>",
                "defaultValue": "(args: Dropdown) => ({\r\n    props: args,\r\n    argTypes: { onClick: { action: 'clicked' } },\r\n  })"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Progressbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Progressbar>",
                "defaultValue": "(args: Progressbar) => ({\r\n    props: args,\r\n  })"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/RadialProgressbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<RadialProgressbar>",
                "defaultValue": "(args: RadialProgressbar) => ({\r\n    props: args,\r\n  })"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Spinner.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Spinner>",
                "defaultValue": "(args: Spinner) => ({\r\n    props: args,\r\n  })"
            },
            {
                "name": "Tertiary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/stories/Button.stories.ts": [
                {
                    "name": "Auto",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Medium",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Button>",
                    "defaultValue": "(args: Button) => ({\r\n    props: args,\r\n    onClick: action('onClick'),\r\n  })"
                },
                {
                    "name": "Tertiary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "src/stories/dropdown.stories.ts": [
                {
                    "name": "DropdownCondensed",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/dropdown.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "DropdownDarkTheme",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/dropdown.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "DropdownDisabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/dropdown.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "DropdownEditable",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/dropdown.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "DropdownError",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/dropdown.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "DropdownErrorMessage",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/dropdown.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "DropdownItems",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/dropdown.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "DropdownLabel",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/dropdown.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "DropdownLightTheme",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/dropdown.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "DropdownMandatory",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/dropdown.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "DropdownMultiSelect",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/dropdown.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "DropdownNoBorder",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/dropdown.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "DropdownSafety",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/dropdown.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "DropdownSuccess",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/dropdown.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "DropdownValue",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/dropdown.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/dropdown.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Dropdown>",
                    "defaultValue": "(args: Dropdown) => ({\r\n    props: args,\r\n    argTypes: { onClick: { action: 'clicked' } },\r\n  })"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false\n}"
                }
            ],
            "src/stories/Progressbar.stories.ts": [
                {
                    "name": "ProgressbarHeader",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Progressbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "ProgressbarInfo",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Progressbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "ProgressbarLabel",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Progressbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "ProgressbarValue",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Progressbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Progressbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Progressbar>",
                    "defaultValue": "(args: Progressbar) => ({\r\n    props: args,\r\n  })"
                }
            ],
            "src/stories/RadialProgressbar.stories.ts": [
                {
                    "name": "ProgressbarHeader",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/RadialProgressbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "ProgressbarInfo",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/RadialProgressbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "ProgressbarLabel",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/RadialProgressbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "ProgressbarValue",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/RadialProgressbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/RadialProgressbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<RadialProgressbar>",
                    "defaultValue": "(args: RadialProgressbar) => ({\r\n    props: args,\r\n  })"
                }
            ],
            "src/stories/Spinner.stories.ts": [
                {
                    "name": "SpinnerLabel",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Spinner.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "SpinnerSize",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Spinner.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Spinner.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Spinner>",
                    "defaultValue": "(args: Spinner) => ({\r\n    props: args,\r\n  })"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "e2e/src/app.po.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AppPage",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Auto",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Medium",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Tertiary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Progressbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ProgressbarHeader",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Progressbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ProgressbarInfo",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Progressbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ProgressbarLabel",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Progressbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ProgressbarValue",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Progressbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/RadialProgressbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ProgressbarHeader",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/RadialProgressbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ProgressbarInfo",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/RadialProgressbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ProgressbarLabel",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/RadialProgressbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ProgressbarValue",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/RadialProgressbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Spinner.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SpinnerLabel",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Spinner.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SpinnerSize",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Spinner.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/stories/dropdown.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DropDownComponent",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "src/stories/dropdown.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DropdownCondensed",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/dropdown.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DropdownDarkTheme",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/dropdown.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DropdownDisabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/dropdown.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DropdownEditable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/dropdown.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DropdownError",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/dropdown.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DropdownErrorMessage",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/dropdown.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DropdownItems",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/dropdown.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DropdownLabel",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/dropdown.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DropdownLightTheme",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/dropdown.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DropdownMandatory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/dropdown.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DropdownMultiSelect",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/dropdown.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DropdownNoBorder",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/dropdown.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DropdownSafety",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/dropdown.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DropdownSuccess",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/dropdown.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DropdownValue",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/dropdown.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/progressbar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProgressComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/radialprogressbar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RadialProgressComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/stories/spinner.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SpinnerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}